-- VALIDAR CIUDAD EN DIRECCIÓN DEL CLIENTE
CREATE OR REPLACE FUNCTION fvalidarciudaddireccion()
RETURNS TRIGGER AS $$
BEGIN
	IF NOT EXISTS (
		SELECT 1 FROM ciudad 
		WHERE id = (NEW.direccion).idciudad 
	) THEN
		RAISE EXCEPTION 'La ciudad con id=% no existe en direccion', (NEW.direccion).idciudad;
	END IF;
	RETURN NEW;
END
$$ LANGUAGE plpgsql;

CREATE TRIGGER tvalidarciudaddireccion
BEFORE INSERT OR UPDATE ON cliente
FOR EACH ROW
EXECUTE FUNCTION fvalidarciudaddireccion();

-- VALIDAR CUENTA DE AHORROS
CREATE OR REPLACE FUNCTION f_validar_numero_cuenta_ahorro()
RETURNS TRIGGER AS $$
BEGIN
	-- Validar número único
	IF EXISTS (
		SELECT 1 FROM cuentaAhorro 
		WHERE (ahorros).BASE.numero = (NEW.ahorros).BASE.numero
	) THEN
		RAISE EXCEPTION 'El número de cuenta de ahorro % ya existe', (NEW.ahorros).BASE.numero;
	END IF;

	-- Validar saldo >= 0
	IF (NEW.ahorros).BASE.saldo < 0 THEN
		RAISE EXCEPTION 'El saldo inicial no puede ser negativo';
	END IF;

	RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER t_validar_numero_cuenta_ahorro
BEFORE INSERT OR UPDATE ON cuentaAhorro
FOR EACH ROW
EXECUTE FUNCTION f_validar_numero_cuenta_ahorro();


-- VALIDAR CUENTA CORRIENTE
CREATE OR REPLACE FUNCTION f_validar_numero_cuenta_corriente()
RETURNS TRIGGER AS $$
BEGIN
	IF EXISTS (
		SELECT 1 FROM cuentaCorriente 
		WHERE (corriente).BASE.numero = (NEW.corriente).BASE.numero
	) THEN
		RAISE EXCEPTION 'El número de cuenta corriente % ya existe', (NEW.corriente).BASE.numero;
	END IF;

	IF (NEW.corriente).BASE.saldo < 0 THEN
		RAISE EXCEPTION 'El saldo inicial no puede ser negativo';
	END IF;

	RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER t_validar_numero_cuenta_corriente
BEFORE INSERT OR UPDATE ON cuentaCorriente
FOR EACH ROW
EXECUTE FUNCTION f_validar_numero_cuenta_corriente();



-- VALIDAR CRÉDITO
CREATE OR REPLACE FUNCTION f_validar_numero_credito()
RETURNS TRIGGER AS $$
BEGIN
	IF EXISTS (
		SELECT 1 FROM credito 
		WHERE (credito).BASE.numero = (NEW.credito).BASE.numero
	) THEN
		RAISE EXCEPTION 'El número de crédito % ya existe', (NEW.credito).BASE.numero;
	END IF;
	
	IF (NEW.credito).BASE.saldo < 0 THEN
		RAISE EXCEPTION 'El saldo inicial no puede ser negativo';
	END IF;

	RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER t_validar_numero_credito
BEFORE INSERT OR UPDATE ON credito
FOR EACH ROW
EXECUTE FUNCTION f_validar_numero_credito();
